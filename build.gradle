/*
 * matrix-appservice-email - Matrix Bridge to E-mail
 * Copyright (C) 2017 Maxime Dor
 *
 * https://max.kamax.io/
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'kamax.io'

def configFile = "application.yaml"
def distBinDir = "${project.buildDir.absolutePath}/dist/bin"

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile project(':matrix-java-sdk')

    // Spring Boot - standalone app
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.3.RELEASE'
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"

    compile 'commons-lang:commons-lang:2.6'

    compile 'com.sun.mail:javax.mail:1.5.6'
    compile 'javax.mail:javax.mail-api:1.5.6'

    compile 'org.xerial:sqlite-jdbc:3.15.1'

    compile 'org.jsoup:jsoup:1.10.2'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task distBin(type: Copy, dependsOn: ['build']) {
    from jar
    from "${projectDir}/${configFile}"
    from "${projectDir}/registration-sample.yaml"
    into distBinDir

    doLast {
        project.exec {
            commandLine('chmod',  'a+x', "${distBinDir}/${jar.archiveName}")
        }
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
